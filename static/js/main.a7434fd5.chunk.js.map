{"version":3,"sources":["components/AsyncComponent.js","components/FirstPage/FirstPage.js","contexts/PageContext.js","components/Navbar/Navbar.js","components/Main/Main.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["asyncComponent","importComponent","_Component","AsyncComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","component","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","_ref","wrap","_context","prev","next","sent","default","setState","stop","Component","react_default","createElement","props","FirstPage","onRouteChange","className","onClick","PageContext","createContext","PageContextProvider","_useState","useState","_useState2","slicedToArray","route","setRoute","theme","page","components_FirstPage_FirstPage","AsyncAboutPage","__webpack_require__","e","then","bind","AsyncContactPage","Provider","children","Navbar","useContext","Main","Footer","href","data-icon","viewBox","style","fill","d","App","_useContext","components_Navbar_Navbar","components_Main_Main","components_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","contexts_PageContext","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7434fd5.chunk.js","sourcesContent":["import React, { Component } from \"react\"; //HOC async Component\n\nexport default function asyncComponent(importComponent) {\n    class AsyncComponent extends Component {\n        state = {\n            component: null\n        };\n\n        async componentDidMount() {\n            const { default: component } = await importComponent();\n            this.setState({ component: component });\n        }\n        render() {\n            const Component = this.state.component;\n\n            return Component ? <Component {...this.props} /> : null;\n        }\n    }\n\n    return AsyncComponent;\n}","import React from 'react';\nimport './firstpage.css';\n\nconst FirstPage = ({ onRouteChange }) => {\n    return (\n        <div className=\"first-page\">\n            <div className=\"first-page_content\" >\n                <h2 className=\"greeting\">\n                    oh!la\n                </h2>\n                <h1 className=\"logo-brand\">\n                    <span className=\"logo-brand_1\">\n                        Jing<span className=\"logo-brand_2\">Jing</span>{\" \"}\n                    </span>\n                    <span className=\"logo-brand_3\">Thinking</span>\n                </h1>\n\n                <div onClick={() => onRouteChange('about')} className=\"leading\">\n                    See what can help ?\n                    </div>\n            </div>\n        </div >\n    );\n}\n\nexport default FirstPage;","import React, { createContext, useState } from 'react';\nimport AsyncComponent from \"../components/AsyncComponent\";\nimport FirstPage from '../components/FirstPage/FirstPage';\n\n\nexport const PageContext = createContext();\nconst PageContextProvider = (props) => {\n    const [route, setRoute] = useState(\"index\")\n    const onRouteChange = (route) => {\n        setRoute(route);\n    }\n\n    let theme = \"first-page-theme\";\n    let page = <FirstPage />;\n    if (route === \"about\") {\n        const AsyncAboutPage = AsyncComponent(() => import('../components/AboutPage/Aboutpage'))\n        page = <AsyncAboutPage />\n        theme = \"about-page-theme\"\n    } else if (route === \"contact\") {\n        const AsyncContactPage = AsyncComponent(() => import('../components/ContactPage/ContactPage'))\n        page = <AsyncContactPage />\n        theme = \"contact-page-theme\"\n    } else {\n        page = <FirstPage onRouteChange={onRouteChange} />;\n        theme = \"first-page-theme\";\n    }\n\n    return (\n        <PageContext.Provider value={{ page, theme, onRouteChange }}>\n            {props.children}\n        </PageContext.Provider>\n    );\n}\n\nexport default PageContextProvider;","import React, { useContext } from 'react';\nimport { PageContext } from '../../contexts/PageContext'\nimport './navbar.css';\n\nconst Navbar = () => {\n    const { onRouteChange } = useContext(PageContext)\n    return (\n        <nav>\n            <div><span className=\"logo-1\">Jing</span><span className=\"logo-2\">Jing</span><span className=\"logo-3\">Thinking</span></div>\n            <ul>\n                <li className=\"index-link\" onClick={() => onRouteChange('index')}><p>Home</p></li>\n                <li className=\"about-link\" onClick={() => onRouteChange('about')}><p>About</p></li>\n                <li className=\"contact-link\" onClick={() => onRouteChange('contact')}><p>Contact</p></li>\n            </ul>\n        </nav>\n    );\n}\n\nexport default Navbar;","import React from 'react';\nimport './main.css';\n\n\nconst Main = (props) => {\n    return (\n        <div className=\"main\">\n            {props.children}\n        </div>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport './footer.css';\n\n\nconst Footer = () => {\n    return (\n        <div className='main-footer'>\n            <footer >\n                <a\n                    href=\"https://www.facebook.com/jingjingthinking/\"\n                >\n                    <svg\n                        data-icon=\"facebook\"\n                        viewBox=\"0 0 32 32\"\n                        style={{ fill: \"currentcolor\" }}\n                    >\n                        <title>facebook icon</title>\n                        <path d=\"M8 12 L13 12 L13 8 C13 2 17 1 24 2 L24 7 C20 7 19 7 19 10 L19 12 L24 12 L23 18 L19 18 L19 30 L13 30 L13 18 L8 18 z\" />\n                    </svg>\n                </a>\n\n                <a\n                    href=\"https://github.com/ginnnnnn\"\n                >\n                    <svg\n                        data-icon=\"github\"\n                        viewBox=\"0 0 32 32\"\n                        style={{ fill: \"currentcolor\" }}\n                    >\n                        <title>github icon</title>\n                        <path d=\"M0 18 C0 12 3 10 3 9 C2.5 7 2.5 4 3 3 C6 3 9 5 10 6 C12 5 14 5 16 5 C18 5 20 5 22 6 C23 5 26 3 29 3 C29.5 4 29.5 7 29 9 C29 10 32 12 32 18 C32 25 30 30 16 30 C2 30 0 25 0 18 M3 20 C3 24 4 28 16 28 C28 28 29 24 29 20 C29 16 28 14 16 14 C4 14 3 16 3 20 M8 21 A1.5 2.5 0 0 0 13 21 A1.5 2.5 0 0 0 8 21 M24 21 A1.5 2.5 0 0 0 19 21 A1.5 2.5 0 0 0 24 21 z\" />\n                    </svg>\n                </a>\n                <a\n                    href=\"/\"\n                >\n                    <svg\n                        data-icon=\"dribbble\"\n                        viewBox=\"0 0 32 32\"\n                        style={{ fill: \"currentcolor\" }}\n                    >\n                        <title>dribbble icon</title>\n                        <path d=\"M16 0 A16 16 0 0 0 0 16 A16 16 0 0 0 16 32 A16 16 0 0 0 32 16 A16 16 0 0 0 16 0 M5 11.5 A12 12 0 0 1 11 5 A46 46 0 0 1 13.5 9.25 A46 46 0 0 1 5 11.5 M15 4 A12 12 0 0 1 21.5 5.25 A46 46 0 0 1 17 7.75 A50 50 0 0 0 15 4 M4 16 A50 50 0 0 0 15 13 A46 46 0 0 1 16 15.5 A26 26 0 0 0 6 22.5 A12 12 0 0 1 4 16 M18.5 11.5 A50 50 0 0 0 25 8 A12 12 0 0 1 28 13.75 A26 26 0 0 0 19.75 14.5 A50 50 0 0 0 18.5 11.5 M17 19.5 A46 46 0 0 1 18 28 A12 12 0 0 1 8.75 25.5 A22 22 0 0 1 17 19.5 M20.75 18.25 A22 22 0 0 1 28 17.75 A12 12 0 0 1 22 26.5 A50 50 0 0 0 20.75 18.25\" />\n                    </svg>\n                </a>\n            </footer>\n        </div>\n    );\n}\n\nexport default Footer;","import React, { useContext } from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport Main from './components/Main/Main';\nimport Footer from './components/Footer/Footer';\nimport { PageContext } from \"./contexts/PageContext\";\n\nfunction App() {\n  const { page, theme } = useContext(PageContext);\n\n  return (\n    <div className={`App ${theme}`}>\n      <Navbar />\n      <Main>\n        {page}\n      </Main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport PageContextProvider from './contexts/PageContext';\n\nReactDOM.render(<PageContextProvider><App /></PageContextProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}